/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt { tapping-term-ms = <90>; };

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        td1: td1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LEFT_GUI>, <&sk LMETA>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 18>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <1 2>;
        };

        ipad_prnt {
            bindings = <&kp LS(LG(NUMBER_3))>;
            key-positions = <10 11>;
        };

        blender_num1 {
            bindings = <&kp KP_NUMBER_1>;
            key-positions = <13 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BASE";
            bindings = <
&kp TAB    &kp Q            &kp W  &kp E  &kp R     &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P      &kp SEMI
&td0       &kp A            &kp S  &kp D  &kp F     &kp G        &kp H      &kp J  &kp K      &kp L    &kp APOS   &kp RSHFT
&kp LCTRL  &mt LC(SPACE) Z  &kp X  &kp C  &kp V     &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp LEFT_GUI
                                   &td1   &kp LALT  &kp SPACE    &kp ENTER  &mo 2  &mo 1
            >;
        };

        lower_layer {
            display-name = "NUM";
            bindings = <
&kp ENTER     &kp N7  &kp N8  &kp N9  &kp EQUAL  &kp SCROLLLOCK      &none   &none   &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE
&mo 2         &kp N4  &kp N5  &kp N6  &kp MINUS  &kp PAUSE_BREAK     &none   &none   &kp C_BRIGHTNESS_DEC  &kp C_PREV         &kp C_NEXT       &kp C_PLAY_PAUSE
&mt LCTRL N0  &kp N1  &kp N2  &kp N3  &none      &kp LS(LG(LEFT))    &none   &none   &none                 &none              &none            &none
                              &trans  &trans     &trans              &trans  &trans  &trans
            >;
        };

        raise_layer {
            display-name = "FUN";
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F12  &none     &none   &none   &none           &kp UP_ARROW    &kp PRINTSCREEN  &none
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &none     &none   &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT        &kp LEFT_SHIFT
&trans  &kp F1  &kp F2  &kp F3  &kp F10  &none     &none   &none   &none           &none           &none            &kp LCTRL
                        &trans  &trans   &trans    &trans  &trans  &trans
            >;
        };

        layer_3 {
            display-name = "SYS";
            bindings = <
&none  &none  &out OUT_TOG  &ext_power EP_ON   &bt BT_CLR_ALL  &rgb_ug RGB_TOG    &rgb_ug RGB_TOG  &bt BT_CLR_ALL  &ext_power EP_ON   &out OUT_TOG  &none  &none
&none  &none  &none         &ext_power EP_OFF  &bt BT_PRV      &bootloader        &bootloader      &bt BT_NXT      &ext_power EP_OFF  &none         &none  &none
&none  &none  &none         &none              &none           &sys_reset         &sys_reset       &none           &none              &none         &none  &none
                            &trans             &trans          &trans             &trans           &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        SYS {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
